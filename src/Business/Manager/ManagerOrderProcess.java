/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Business.Manager;

import Business.DB4OUtil.DB4OUtil;
import Business.Designer.DesignerWorkAreaJPanel;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Order.OrderItem;
import Business.Organization.DesignerOrganization;
import Business.Organization.Organization;
import Business.Supplier.Supplier;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Toolkit;
import java.text.Format;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author anand
 */
public class ManagerOrderProcess extends javax.swing.JPanel {

    /**
     * Creates new form ManagerOrderProcess
     */
    JPanel userProcessContainer;
    UserAccount account;
    Enterprise enterprise;
    EcoSystem system;
    DB4OUtil dB4OUtil;
    OrderItem orderItem;

    ManagerOrderProcess(JPanel userProcessContainer, EcoSystem system, DB4OUtil dB4OUtil, OrderItem orderItem, Enterprise enterprise) {
        //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.enterprise = enterprise;
        this.dB4OUtil = dB4OUtil;
        this.orderItem = orderItem;
        fullscreen();
    }

    public void fullscreen() {
        int width = Toolkit.getDefaultToolkit().getScreenSize().width;
        int heigth = Toolkit.getDefaultToolkit().getScreenSize().height;
        jLabel2.setSize(width, heigth);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        resultTxt = new javax.swing.JTextField();
        approveBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        rejectBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Result :");
        add(jLabel1);
        jLabel1.setBounds(200, 120, 120, 40);
        add(resultTxt);
        resultTxt.setBounds(340, 120, 250, 50);

        approveBtn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        approveBtn.setText("Approve");
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });
        add(approveBtn);
        approveBtn.setBounds(243, 230, 150, 29);

        backBtn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn);
        backBtn.setBounds(40, 430, 110, 40);

        rejectBtn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        rejectBtn.setText("Reject");
        rejectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBtnActionPerformed(evt);
            }
        });
        add(rejectBtn);
        rejectBtn.setBounds(450, 230, 110, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/Manager/Forest-park-trees-grass-photo_1920x1080.jpg"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(0, 0, 910, 570);
    }// </editor-fold>//GEN-END:initComponents

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        // TODO add your handling code here:
        String text = resultTxt.getText();
        if (text.equalsIgnoreCase(" ")) {
            JOptionPane.showMessageDialog(null, "Please dont leave the field empty");
            return;
        }

        orderItem.setOrderStatus("Approved");

        for (Network network : system.getNetworkList()) {
            if (network.getName().equalsIgnoreCase("Chicago")) {
                for (Supplier S : network.getSupplierDirectory().getSupplierList()) {
                    for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (e.getName().equalsIgnoreCase("NEU")) {
                            for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                                if (org instanceof DesignerOrganization) {
                                    for (WorkRequest wrk : org.getWorkQueue().getWorkRequestList()) {
                                        if (wrk.getWrkReqnumber() == orderItem.getOrderForwrkReq()) {
                                            wrk.setStatus("Approved By Manager");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Order Approved");
        goBack();
    }//GEN-LAST:event_approveBtnActionPerformed

    public void goBack() {
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManagerWorkAreaJPanel dwjp = (ManagerWorkAreaJPanel) component;
        dwjp.populateBtnTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManagerWorkAreaJPanel dwjp = (ManagerWorkAreaJPanel) component;
        dwjp.populateBtnTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);


    }//GEN-LAST:event_backBtnActionPerformed

    private void rejectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBtnActionPerformed
        // TODO add your handling code here:
        //orderItem.setOrderStatus("Approved");

        String text = resultTxt.getText();
        if (text.equalsIgnoreCase(" ")) {
            JOptionPane.showMessageDialog(null, "Please dont leave the field empty");
            return;
        }

        for (Network network : system.getNetworkList()) {
            if (network.getName().equalsIgnoreCase("Chicago")) {
                for (Supplier S : network.getSupplierDirectory().getSupplierList()) {
                    for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (e.getName().equalsIgnoreCase("NEU")) {
                            for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                                if (org instanceof DesignerOrganization) {
                                    for (WorkRequest wrk : org.getWorkQueue().getWorkRequestList()) {
                                        if (wrk.getWrkReqnumber() == orderItem.getOrderForwrkReq()) {
                                            wrk.setStatus("Rejectd By Manager");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        for (Network network : system.getNetworkList()) {
            if (network.getName().equalsIgnoreCase("Chicago")) {
                for (Supplier S : network.getSupplierDirectory().getSupplierList()) {
                    for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (e.getName().equalsIgnoreCase("NEU")) {
                            for (OrderItem oi : e.getOrder().getOrderItemList()) {
                                if (oi.getOrderID() == orderItem.getOrderID()) {
                                    oi.setOrderStatus("Rejected");
                                }
                            }
                        }
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(null, "Order Rejected");
        goBack();

    }//GEN-LAST:event_rejectBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton rejectBtn;
    private javax.swing.JTextField resultTxt;
    // End of variables declaration//GEN-END:variables
}
